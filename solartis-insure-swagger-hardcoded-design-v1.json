{
  "openapi": "3.0.3",
  "info": {
    "title": "Solartis Insure - OpenAPI 3.0",
    "contact": {
      "email": "apiteam@solartis.com"
    },
    "version": "1.0.11"
  },
  "servers": [
    {
      "url": "http://localhost:8080",
      "description": "Inferred Url"
    }
  ],

  "paths": {
     "/solartisinsure/authentication/api/generateToken": {
      "post": {
        "tags": [
          "1. Authentication API"
        ],
        "summary": "Authentication API",
        "description": "To get Authentication Token",
        "operationId": "generateTokenUsingPOST",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "application/json",
            "required": true,
            "schema": {
              "type": "string",
              "exampleSetFlag": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string",
                "exampleSetFlag": true
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "exampleSetFlag": true
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/solartisinsure/rating/api/calculatePremium": {
      "post": {
        "tags": [
          "2. Rating API"
        ],
        "summary": "Calculate Insurance Premium",
        "description": "API to calculate insurance premium",
        "operationId": "calculatePremiumUsingPOST",
        "parameters": [
          {
            "name": "OwnerId",
            "in": "header",
            "description": "OwnerId",
            "required": true,
            "schema": {
              "type": "string",
              "exampleSetFlag": true
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "application/json",
            "required": true,
            "schema": {
              "type": "string",
              "exampleSetFlag": true
            }
          },
          {
            "name": "Token",
            "in": "header",
            "description": "Authentication Token",
            "required": true,
            "schema": {
              "type": "string",
              "exampleSetFlag": true
            }
          },
          {
            "name": "Mode",
            "in": "header",
            "description": "LIVE",
            "required": true,
            "schema": {
              "type": "string",
              "exampleSetFlag": true,
              "enum": [
                "DEV",
                "LIVE",
                "TEST"
              ]
            }
          },
          {
            "name": "Environment",
            "in": "header",
            "description": "15",
            "required": true,
            "schema": {
              "type": "string",
              "exampleSetFlag": true,
              "enum": [
                "15",
                "20",
                "25"
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string",
                "exampleSetFlag": true
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "exampleSetFlag": true
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/solartisinsure/transaction/api/quote": {
      "post": {
        "tags": [
          "3. Transaction API"
        ],
        "summary": "Creates a new quote",
        "description": "Add a new quote",
        "operationId": "createQuoteUsingPOST",
        "parameters": [
          {
            "name": "OwnerId",
            "in": "header",
            "description": "OwnerId",
            "required": true,
            "schema": {
              "type": "string",
              "exampleSetFlag": true
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "application/json",
            "required": true,
            "schema": {
              "type": "string",
              "exampleSetFlag": true
            }
          },
          {
            "name": "Token",
            "in": "header",
            "description": "Authentication Token",
            "required": true,
            "schema": {
              "type": "string",
              "exampleSetFlag": true
            }
          },
          {
            "name": "Mode",
            "in": "header",
            "description": "LIVE",
            "required": true,
            "schema": {
              "type": "string",
              "exampleSetFlag": true,
              "enum": [
                "DEV",
                "LIVE",
                "TEST"
              ]
            }
          },
          {
            "name": "Environment",
            "in": "header",
            "description": "15",
            "required": true,
            "schema": {
              "type": "string",
              "exampleSetFlag": true,
              "enum": [
                "15",
                "20",
                "25"
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string",
                "exampleSetFlag": true
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "exampleSetFlag": true
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/solartisinsure/transaction/api/quote/{quoteId}": {
      "get": {
        "tags": [
          "3. Transaction API"
        ],
        "summary": "Gets a quote using quote id",
        "description": "Get quote",
        "operationId": "getQuoteByIdUsingGET",
        "parameters": [
          {
            "name": "quoteId",
            "in": "path",
            "description": "ID of quote to return",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "exampleSetFlag": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "exampleSetFlag": false
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "405": {
            "description": "Invalid input"
          }
        }
      },
      "put": {
        "tags": [
          "3. Transaction API"
        ],
        "summary": "Updates a quote using quote id",
        "description": "Update quote",
        "operationId": "updateQuoteUsingPUT",
        "parameters": [
          {
            "name": "quoteId",
            "in": "path",
            "description": "ID of quote to update",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "exampleSetFlag": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "exampleSetFlag": false
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "405": {
            "description": "Invalid input"
          }
        }
      },
      "delete": {
        "tags": [
          "3. Transaction API"
        ],
        "summary": "Updates a quote using quote id",
        "description": "Update quote",
        "operationId": "deleteQuoteUsingDELETE",
        "parameters": [
          {
            "name": "quoteId",
            "in": "path",
            "description": "quote id to delete",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64",
              "exampleSetFlag": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    
    "/solartisinsure/workflow/api/quote": {
      "post": {
        "tags": [
          "4. Workflow API"
        ],
        "summary": "Creates a new quote",
        "description": "Add a new quote",
        "operationId": "createQuoteUsingPOST_1",
        "parameters": [
          {
            "name": "OwnerId",
            "in": "header",
            "description": "OwnerId",
            "required": true,
            "schema": {
              "type": "string",
              "exampleSetFlag": true
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "application/json",
            "required": true,
            "schema": {
              "type": "string",
              "exampleSetFlag": true
            }
          },
          {
            "name": "Token",
            "in": "header",
            "description": "Authentication Token",
            "required": true,
            "schema": {
              "type": "string",
              "exampleSetFlag": true
            }
          },
          {
            "name": "Mode",
            "in": "header",
            "description": "LIVE",
            "required": true,
            "schema": {
              "type": "string",
              "exampleSetFlag": true,
              "enum": [
                "DEV",
                "LIVE",
                "TEST"
              ]
            }
          },
          {
            "name": "Environment",
            "in": "header",
            "description": "15",
            "required": true,
            "schema": {
              "type": "string",
              "exampleSetFlag": true,
              "enum": [
                "15",
                "20",
                "25"
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string",
                "exampleSetFlag": true
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "exampleSetFlag": true
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/solartisinsure/workflow/api/quote/{quoteId}": {
      "get": {
        "tags": [
          "4. Workflow API"
        ],
        "summary": "Gets a quote using quote id",
        "description": "Get quote",
        "operationId": "getQuoteByIdUsingGET_1",
        "parameters": [
          {
            "name": "quoteId",
            "in": "path",
            "description": "ID of quote to return",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "exampleSetFlag": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "exampleSetFlag": false
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "405": {
            "description": "Invalid input"
          }
        }
      },
      "put": {
        "tags": [
          "4. Workflow API"
        ],
        "summary": "Updates a quote using quote id",
        "description": "Update quote",
        "operationId": "updateQuoteUsingPUT_1",
        "parameters": [
          {
            "name": "quoteId",
            "in": "path",
            "description": "ID of quote to update",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "exampleSetFlag": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "exampleSetFlag": false
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "405": {
            "description": "Invalid input"
          }
        }
      },
      "delete": {
        "tags": [
          "4. Workflow API"
        ],
        "summary": "Updates a quote using quote id",
        "description": "Update quote",
        "operationId": "deleteQuoteUsingDELETE_1",
        "parameters": [
          {
            "name": "quoteId",
            "in": "path",
            "description": "quote id to delete",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64",
              "exampleSetFlag": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/solartisinsure/document/api/generate": {
      "post": {
        "tags": [
          "5. Document Generation API"
        ],
        "summary": "Generate Document",
        "description": "Document Generation API",
        "operationId": "generateDocumentUsingPOST",
        "parameters": [
          {
            "name": "OwnerId",
            "in": "header",
            "description": "OwnerId",
            "required": true,
            "schema": {
              "type": "string",
              "exampleSetFlag": true
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "application/json",
            "required": true,
            "schema": {
              "type": "string",
              "exampleSetFlag": true
            }
          },
          {
            "name": "Token",
            "in": "header",
            "description": "Authentication Token",
            "required": true,
            "schema": {
              "type": "string",
              "exampleSetFlag": true
            }
          },
          {
            "name": "Mode",
            "in": "header",
            "description": "LIVE",
            "required": true,
            "schema": {
              "type": "string",
              "exampleSetFlag": true,
              "enum": [
                "DEV",
                "LIVE",
                "TEST"
              ]
            }
          },
          {
            "name": "Environment",
            "in": "header",
            "description": "15",
            "required": true,
            "schema": {
              "type": "string",
              "exampleSetFlag": true,
              "enum": [
                "15",
                "20",
                "25"
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string",
                "exampleSetFlag": true
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "exampleSetFlag": true
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    
    "/solartisinsure/metadata/api/getMetaData": {
      "post": {
        "tags": [
          "6. Metadata API"
        ],
        "summary": "Get MetaData",
        "description": "Document Generation API",
        "operationId": "getMetaDataUsingPOST",
        "parameters": [
          {
            "name": "OwnerId",
            "in": "header",
            "description": "OwnerId",
            "required": true,
            "schema": {
              "type": "string",
              "exampleSetFlag": true
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "application/json",
            "required": true,
            "schema": {
              "type": "string",
              "exampleSetFlag": true
            }
          },
          {
            "name": "Token",
            "in": "header",
            "description": "Authentication Token",
            "required": true,
            "schema": {
              "type": "string",
              "exampleSetFlag": true
            }
          },
          {
            "name": "Mode",
            "in": "header",
            "description": "LIVE",
            "required": true,
            "schema": {
              "type": "string",
              "exampleSetFlag": true,
              "enum": [
                "DEV",
                "LIVE",
                "TEST"
              ]
            }
          },
          {
            "name": "Environment",
            "in": "header",
            "description": "15",
            "required": true,
            "schema": {
              "type": "string",
              "exampleSetFlag": true,
              "enum": [
                "15",
                "20",
                "25"
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string",
                "exampleSetFlag": true
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "exampleSetFlag": true
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "405": {
            "description": "Invalid input"
          }
        }
      }
    }
  },
  "components": {}
}